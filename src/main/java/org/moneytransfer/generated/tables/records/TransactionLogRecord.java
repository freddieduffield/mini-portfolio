/*
 * This file is generated by jOOQ.
 */
package org.moneytransfer.generated.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.moneytransfer.generated.enums.EventType;
import org.moneytransfer.generated.tables.TransactionLog;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionLogRecord extends UpdatableRecordImpl<TransactionLogRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.transaction_log.transaction_id</code>.
     */
    public TransactionLogRecord setTransactionId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.transaction_log.transaction_id</code>.
     */
    public UUID getTransactionId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.transaction_log.transfer_id</code>.
     */
    public TransactionLogRecord setTransferId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.transaction_log.transfer_id</code>.
     */
    public UUID getTransferId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.transaction_log.event</code>.
     */
    public TransactionLogRecord setEvent(EventType value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.transaction_log.event</code>.
     */
    public EventType getEvent() {
        return (EventType) get(2);
    }

    /**
     * Setter for <code>public.transaction_log.timestamp</code>.
     */
    public TransactionLogRecord setTimestamp(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.transaction_log.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionLogRecord
     */
    public TransactionLogRecord() {
        super(TransactionLog.TRANSACTION_LOG);
    }

    /**
     * Create a detached, initialised TransactionLogRecord
     */
    public TransactionLogRecord(UUID transactionId, UUID transferId, EventType event, LocalDateTime timestamp) {
        super(TransactionLog.TRANSACTION_LOG);

        setTransactionId(transactionId);
        setTransferId(transferId);
        setEvent(event);
        setTimestamp(timestamp);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TransactionLogRecord
     */
    public TransactionLogRecord(org.moneytransfer.generated.tables.pojos.TransactionLog value) {
        super(TransactionLog.TRANSACTION_LOG);

        if (value != null) {
            setTransactionId(value.getTransactionId());
            setTransferId(value.getTransferId());
            setEvent(value.getEvent());
            setTimestamp(value.getTimestamp());
            resetChangedOnNotNull();
        }
    }
}
