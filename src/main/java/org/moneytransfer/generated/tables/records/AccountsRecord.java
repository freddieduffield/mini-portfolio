/*
 * This file is generated by jOOQ.
 */
package org.moneytransfer.generated.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.moneytransfer.generated.tables.Accounts;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsRecord extends UpdatableRecordImpl<AccountsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.accounts.account_id</code>.
     */
    public AccountsRecord setAccountId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts.account_id</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.accounts.balance</code>.
     */
    public AccountsRecord setBalance(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts.balance</code>.
     */
    public Long getBalance() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.accounts.created_at</code>.
     */
    public AccountsRecord setCreatedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.accounts.updated_at</code>.
     */
    public AccountsRecord setUpdatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountsRecord
     */
    public AccountsRecord() {
        super(Accounts.ACCOUNTS);
    }

    /**
     * Create a detached, initialised AccountsRecord
     */
    public AccountsRecord(UUID accountId, Long balance, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Accounts.ACCOUNTS);

        setAccountId(accountId);
        setBalance(balance);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AccountsRecord
     */
    public AccountsRecord(org.moneytransfer.generated.tables.pojos.Accounts value) {
        super(Accounts.ACCOUNTS);

        if (value != null) {
            setAccountId(value.getAccountId());
            setBalance(value.getBalance());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
