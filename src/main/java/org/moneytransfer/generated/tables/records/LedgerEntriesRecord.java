/*
 * This file is generated by jOOQ.
 */
package org.moneytransfer.generated.tables.records;


import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.moneytransfer.generated.enums.DebitCreditEnum;
import org.moneytransfer.generated.tables.LedgerEntries;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LedgerEntriesRecord extends UpdatableRecordImpl<LedgerEntriesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ledger_entries.entry_id</code>.
     */
    public LedgerEntriesRecord setEntryId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.ledger_entries.entry_id</code>.
     */
    public UUID getEntryId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.ledger_entries.account_id</code>.
     */
    public LedgerEntriesRecord setAccountId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.ledger_entries.account_id</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.ledger_entries.amount</code>.
     */
    public LedgerEntriesRecord setAmount(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.ledger_entries.amount</code>.
     */
    public Long getAmount() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.ledger_entries.debit_credit</code>.
     */
    public LedgerEntriesRecord setDebitCredit(DebitCreditEnum value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.ledger_entries.debit_credit</code>.
     */
    public DebitCreditEnum getDebitCredit() {
        return (DebitCreditEnum) get(3);
    }

    /**
     * Setter for <code>public.ledger_entries.transfer_id</code>.
     */
    public LedgerEntriesRecord setTransferId(UUID value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.ledger_entries.transfer_id</code>.
     */
    public UUID getTransferId() {
        return (UUID) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LedgerEntriesRecord
     */
    public LedgerEntriesRecord() {
        super(LedgerEntries.LEDGER_ENTRIES);
    }

    /**
     * Create a detached, initialised LedgerEntriesRecord
     */
    public LedgerEntriesRecord(UUID entryId, UUID accountId, Long amount, DebitCreditEnum debitCredit, UUID transferId) {
        super(LedgerEntries.LEDGER_ENTRIES);

        setEntryId(entryId);
        setAccountId(accountId);
        setAmount(amount);
        setDebitCredit(debitCredit);
        setTransferId(transferId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LedgerEntriesRecord
     */
    public LedgerEntriesRecord(org.moneytransfer.generated.tables.pojos.LedgerEntries value) {
        super(LedgerEntries.LEDGER_ENTRIES);

        if (value != null) {
            setEntryId(value.getEntryId());
            setAccountId(value.getAccountId());
            setAmount(value.getAmount());
            setDebitCredit(value.getDebitCredit());
            setTransferId(value.getTransferId());
            resetChangedOnNotNull();
        }
    }
}
