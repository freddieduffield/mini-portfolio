/*
 * This file is generated by jOOQ.
 */
package org.moneytransfer.generated.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.moneytransfer.generated.enums.TransferStatus;
import org.moneytransfer.generated.tables.Transfers;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransfersRecord extends UpdatableRecordImpl<TransfersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.transfers.transfer_id</code>.
     */
    public TransfersRecord setTransferId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.transfers.transfer_id</code>.
     */
    public UUID getTransferId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.transfers.from_account</code>.
     */
    public TransfersRecord setFromAccount(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.transfers.from_account</code>.
     */
    public UUID getFromAccount() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.transfers.to_account</code>.
     */
    public TransfersRecord setToAccount(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.transfers.to_account</code>.
     */
    public UUID getToAccount() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.transfers.amount</code>.
     */
    public TransfersRecord setAmount(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.transfers.amount</code>.
     */
    public Long getAmount() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.transfers.status</code>.
     */
    public TransfersRecord setStatus(TransferStatus value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.transfers.status</code>.
     */
    public TransferStatus getStatus() {
        return (TransferStatus) get(4);
    }

    /**
     * Setter for <code>public.transfers.created_at</code>.
     */
    public TransfersRecord setCreatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.transfers.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.transfers.updated_at</code>.
     */
    public TransfersRecord setUpdatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.transfers.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransfersRecord
     */
    public TransfersRecord() {
        super(Transfers.TRANSFERS);
    }

    /**
     * Create a detached, initialised TransfersRecord
     */
    public TransfersRecord(UUID transferId, UUID fromAccount, UUID toAccount, Long amount, TransferStatus status, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Transfers.TRANSFERS);

        setTransferId(transferId);
        setFromAccount(fromAccount);
        setToAccount(toAccount);
        setAmount(amount);
        setStatus(status);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TransfersRecord
     */
    public TransfersRecord(org.moneytransfer.generated.tables.pojos.Transfers value) {
        super(Transfers.TRANSFERS);

        if (value != null) {
            setTransferId(value.getTransferId());
            setFromAccount(value.getFromAccount());
            setToAccount(value.getToAccount());
            setAmount(value.getAmount());
            setStatus(value.getStatus());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
