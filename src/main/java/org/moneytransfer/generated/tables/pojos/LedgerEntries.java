/*
 * This file is generated by jOOQ.
 */
package org.moneytransfer.generated.tables.pojos;


import java.io.Serializable;
import java.util.UUID;

import org.moneytransfer.generated.enums.DebitCreditEnum;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LedgerEntries implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID entryId;
    private final UUID accountId;
    private final Long amount;
    private final DebitCreditEnum debitCredit;
    private final UUID transferId;

    public LedgerEntries(LedgerEntries value) {
        this.entryId = value.entryId;
        this.accountId = value.accountId;
        this.amount = value.amount;
        this.debitCredit = value.debitCredit;
        this.transferId = value.transferId;
    }

    public LedgerEntries(
        UUID entryId,
        UUID accountId,
        Long amount,
        DebitCreditEnum debitCredit,
        UUID transferId
    ) {
        this.entryId = entryId;
        this.accountId = accountId;
        this.amount = amount;
        this.debitCredit = debitCredit;
        this.transferId = transferId;
    }

    /**
     * Getter for <code>public.ledger_entries.entry_id</code>.
     */
    public UUID getEntryId() {
        return this.entryId;
    }

    /**
     * Getter for <code>public.ledger_entries.account_id</code>.
     */
    public UUID getAccountId() {
        return this.accountId;
    }

    /**
     * Getter for <code>public.ledger_entries.amount</code>.
     */
    public Long getAmount() {
        return this.amount;
    }

    /**
     * Getter for <code>public.ledger_entries.debit_credit</code>.
     */
    public DebitCreditEnum getDebitCredit() {
        return this.debitCredit;
    }

    /**
     * Getter for <code>public.ledger_entries.transfer_id</code>.
     */
    public UUID getTransferId() {
        return this.transferId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final LedgerEntries other = (LedgerEntries) obj;
        if (this.entryId == null) {
            if (other.entryId != null)
                return false;
        }
        else if (!this.entryId.equals(other.entryId))
            return false;
        if (this.accountId == null) {
            if (other.accountId != null)
                return false;
        }
        else if (!this.accountId.equals(other.accountId))
            return false;
        if (this.amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!this.amount.equals(other.amount))
            return false;
        if (this.debitCredit == null) {
            if (other.debitCredit != null)
                return false;
        }
        else if (!this.debitCredit.equals(other.debitCredit))
            return false;
        if (this.transferId == null) {
            if (other.transferId != null)
                return false;
        }
        else if (!this.transferId.equals(other.transferId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.entryId == null) ? 0 : this.entryId.hashCode());
        result = prime * result + ((this.accountId == null) ? 0 : this.accountId.hashCode());
        result = prime * result + ((this.amount == null) ? 0 : this.amount.hashCode());
        result = prime * result + ((this.debitCredit == null) ? 0 : this.debitCredit.hashCode());
        result = prime * result + ((this.transferId == null) ? 0 : this.transferId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("LedgerEntries (");

        sb.append(entryId);
        sb.append(", ").append(accountId);
        sb.append(", ").append(amount);
        sb.append(", ").append(debitCredit);
        sb.append(", ").append(transferId);

        sb.append(")");
        return sb.toString();
    }
}
