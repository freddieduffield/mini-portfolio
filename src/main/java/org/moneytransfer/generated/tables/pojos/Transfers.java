/*
 * This file is generated by jOOQ.
 */
package org.moneytransfer.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

import org.moneytransfer.generated.enums.TransferStatus;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Transfers implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID transferId;
    private final UUID fromAccount;
    private final UUID toAccount;
    private final Long amount;
    private final TransferStatus status;
    private final LocalDateTime createdAt;
    private final LocalDateTime updatedAt;

    public Transfers(Transfers value) {
        this.transferId = value.transferId;
        this.fromAccount = value.fromAccount;
        this.toAccount = value.toAccount;
        this.amount = value.amount;
        this.status = value.status;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public Transfers(
        UUID transferId,
        UUID fromAccount,
        UUID toAccount,
        Long amount,
        TransferStatus status,
        LocalDateTime createdAt,
        LocalDateTime updatedAt
    ) {
        this.transferId = transferId;
        this.fromAccount = fromAccount;
        this.toAccount = toAccount;
        this.amount = amount;
        this.status = status;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.transfers.transfer_id</code>.
     */
    public UUID getTransferId() {
        return this.transferId;
    }

    /**
     * Getter for <code>public.transfers.from_account</code>.
     */
    public UUID getFromAccount() {
        return this.fromAccount;
    }

    /**
     * Getter for <code>public.transfers.to_account</code>.
     */
    public UUID getToAccount() {
        return this.toAccount;
    }

    /**
     * Getter for <code>public.transfers.amount</code>.
     */
    public Long getAmount() {
        return this.amount;
    }

    /**
     * Getter for <code>public.transfers.status</code>.
     */
    public TransferStatus getStatus() {
        return this.status;
    }

    /**
     * Getter for <code>public.transfers.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>public.transfers.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Transfers other = (Transfers) obj;
        if (this.transferId == null) {
            if (other.transferId != null)
                return false;
        }
        else if (!this.transferId.equals(other.transferId))
            return false;
        if (this.fromAccount == null) {
            if (other.fromAccount != null)
                return false;
        }
        else if (!this.fromAccount.equals(other.fromAccount))
            return false;
        if (this.toAccount == null) {
            if (other.toAccount != null)
                return false;
        }
        else if (!this.toAccount.equals(other.toAccount))
            return false;
        if (this.amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!this.amount.equals(other.amount))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.transferId == null) ? 0 : this.transferId.hashCode());
        result = prime * result + ((this.fromAccount == null) ? 0 : this.fromAccount.hashCode());
        result = prime * result + ((this.toAccount == null) ? 0 : this.toAccount.hashCode());
        result = prime * result + ((this.amount == null) ? 0 : this.amount.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Transfers (");

        sb.append(transferId);
        sb.append(", ").append(fromAccount);
        sb.append(", ").append(toAccount);
        sb.append(", ").append(amount);
        sb.append(", ").append(status);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
